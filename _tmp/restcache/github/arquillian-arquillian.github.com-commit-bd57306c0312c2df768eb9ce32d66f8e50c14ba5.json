{"commit":{"id":"bd57306c0312c2df768eb9ce32d66f8e50c14ba5","message":"Added forge output","committer":{"name":"Aslak Knutsen","email":"aslak@redhat.com","login":"aslakknutsen"},"committed_date":"2011-10-23T03:39:16-07:00","url":"/arquillian/arquillian.github.com/commit/bd57306c0312c2df768eb9ce32d66f8e50c14ba5","authored_date":"2011-10-22T16:11:37-07:00","parents":[{"id":"e8453aa2effd43f1c07425a7d567fa97ceb03ce1"}],"author":{"name":"Paul Bakker","email":"paul.bakker.nl@gmail.com","login":"paulbakker"},"modified":[{"filename":"guides/getting_started_faster_with_forge.textile","diff":"@@ -29,24 +29,25 @@ h3. Create a Project\n Before we can get started with Arquillian we need a project. If you did not create one yet, use the following Forge commands to create a simple Java EE 6 project that includes JPA.\n \n bc(command).. $ new-project --named arquillian-demo --topLevelPackage demo\n+ ? Use [/Users/paul/arquillian-demo] as project directory? [Y/n]  [true] \n+***SUCCESS*** Created project [arquillian-demo] in new working directory [/Users/paul/arquillian-demo]\n+Wrote /Users/paul/arquillian-demo\n+Wrote /Users/paul/arquillian-demo/pom.xml\n+Wrote /Users/paul/arquillian-demo/src/main/java\n+Wrote /Users/paul/arquillian-demo/src/test/java\n+Wrote /Users/paul/arquillian-demo/src/main/resources\n+Wrote /Users/paul/arquillian-demo/src/test/resources\n+Wrote /Users/paul/arquillian-demo/src/main/resources/META-INF/forge.xml\n \n p. The new project is created. Next, we need to have some code to test. Let's use Forge to create a new CDI bean.\n \n bc(command).. $ beans new-bean --type demo.MySimpleBean --scoped DEPENDENT\n+Picked up type <JavaResource>: demo.MySimpleBean\n+Wrote /Users/paul/arquillian-demo/src/main/java/demo/MySimpleBean.java\n \n-p. Now configure JPA, an Entity and a simple Data Access Object.\n+p. Your project is set up now. It's time for testing!\n \n-bc(command). $ persistence setup --provider HIBERNATE --container JBOSS_AS7\n-\n-bc(command). $ entity --named Language --package demo.entities\n-\n-bc(command). $ field string --named name\n-\n-bc(command). $ beans new-bean --type demo.dao.LanguageDao --scoped REQUEST\n-\n-p. Your project is set up now. It's time for some testing!\n-\n-h3. Getting Started \n+h3. Getting started \n \n Setting up Arquillian is easy, as you might have seen in the \"general getting started guide\":../getting_started. It is a lot of copy/paste work however to configure a new container for Arquillian in the pom.xml. Forge can do that for you with a single command!\n \n@@ -67,6 +68,8 @@ h3. Writing a Test\n Now let's write a test. Forge can help you get started again.\n \n bc(command).. $ arquillian create-test --class demo.MySimpleBean.java\n+Picked up type <JavaResource>: demo.MySimpleBeanTest\n+Wrote /Users/paul/arquillian-demo/src/test/java/demo/MySimpleBeanTest.java\n \n p. A new test class with a deployment and test method is added to the project. It injects the class under test using CDI, so this will immediately prove if the test really runs in a container. If your IDE can't find imports, make sure you enable the Maven profile that was created earlier. You can run the test from your IDE, directly from Maven or from Forge.\n \n@@ -78,7 +81,25 @@ Now let's try to test some JPA code.\n \n h3. Test Persistence\n \n-First add some JPA code to your project to test. Add a class @demo.dao.LanguageDao@ in your IDE and populate it with the content shown below:\n+Before we can start wrting tests we need to configure JPA, an Entity and a simple Data Access Object.\n+\n+bc(command).. $ persistence setup --provider HIBERNATE --container JBOSS_AS7\n+***SUCCESS*** Installed [forge.spec.jpa] successfully.\n+***INFO*** Setting transaction-type=\"JTA\"\n+***INFO*** Using example data source [java:jboss/datasources/ExampleDS]\n+Warning:  The encoding 'UTF-8' is not supported by the Java runtime.\n+ ? The JPA provider [HIBERNATE], also supplies extended APIs. Install these as well? [y/N]  [false] \n+Wrote /Users/paul/arquillian-demo/pom.xml\n+Wrote /Users/paul/arquillian-demo/src/main/resources/META-INF/persistence.xml\n+\n+$ entity --named Language --package demo.entities\n+Created @Entity [demo.entities.Language]\n+Picked up type <JavaResource>: demo.entities.Language\n+Wrote /Users/paul/arquillian-demo/src/main/java/demo/entities/Language.java\n+\n+$ field string --named name\n+Added field to demo.entities.Language: @Column private String name;\n+Wrote /Users/paul/arquillian-demo/src/main/java/demo/entities/Language.java\n \n div(filename). src/main/java/demo/dao/LanguageDao.java\n \n@@ -118,9 +139,11 @@ public class LanguageDao {\n     }\n }\n \n-p. Now create a test class for this bean using Forge.\n+p. Now create a test.\n \n bc(command).. $ arquillian create-test --class demo.dao.LanguageDao.java --enableJPA\n+Picked up type <JavaResource>: demo.dao.LanguageDemoTest\n+Wrote /Users/paul/arquillian-demo/src/test/java/demo/dao/LanguageDemoTest.java\n \n p. This again creates a new test, but also adds your persistence.xml to the deployment. Open the test in your IDE and add the @Language@ entity to the deployment.\n \n@@ -128,14 +151,12 @@ Now write a test assertion:\n \n div(filename). src/test/java/demo/dao/LanguageDaoTest.java\n \n-bc(prettify).. // clip\n-@Test\n+bc(prettify).. @Test\n public void testListLanguages() {\n-    Assert.assertEquals(3, languagedao.listLanguages().size());\n+\tAssert.assertEquals(3, languagedao.listLanguages().size());\n }\n-// clip\n  \n-p. *Congratulations!* Another *(greenbar)green bar* with Arquillian and Forge!\n+p. *Congratulations!* Another *(greenbar)green bar* with Arquillian!\n \n h3. Add More Containers\n "}],"tree":"f005980b675dd6af11edcdb378f1f879d5de7505"}}
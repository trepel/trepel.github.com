{"commit":{"tree":"68fdab449b2171bf4d3e393591277bf9e68a9b3a","parents":[{"id":"3a6f1598681069a066084af82474df2829ccc5b2"}],"authored_date":"2012-06-20T01:20:09-07:00","id":"306451ae3c0c4a716dc461d77978c591376aa39c","url":"/arquillian/arquillian-container-openwebbeans/commit/306451ae3c0c4a716dc461d77978c591376aa39c","committer":{"email":"struberg@apache.org","name":"Mark Struberg","login":"struberg"},"committed_date":"2012-06-20T01:20:09-07:00","message":"add archive name to the URL path.\n\nOtherwise the default URL#equals will not be able to\ndistinguish resources with same name (e.g. META-INF/beans.xml)\nin different classpath locations.","author":{"email":"struberg@apache.org","name":"Mark Struberg","login":"struberg"},"modified":[{"filename":"openwebbeans-embedded-1/src/main/java/org/jboss/arquillian/container/openwebbeans/embedded_1/ShrinkWrapMetaDataDiscovery.java","diff":"@@ -82,11 +82,11 @@ private void scanArchive(Archive<?> archive)\n         {\n             Map<ArchivePath, Node> beansXmls;\n             beansXmls = archive.getContent(Filters.include(\"/WEB-INF/beans.xml\"));\n-            beansXmlPresent |= parseBeansXmls(beansXmls);\n+            beansXmlPresent |= parseBeansXmls(archive.getName(), beansXmls);\n \n             // people might also add the marker file to WEB-INF/classes directly\n             beansXmls = archive.getContent(Filters.include(\"/WEB-INF/classes/META-INF/beans.xml\"));\n-            beansXmlPresent |= parseBeansXmls(beansXmls);\n+            beansXmlPresent |= parseBeansXmls(archive.getName(), beansXmls);\n \n             if (beansXmlPresent)\n             {\n@@ -108,7 +108,7 @@ else if (archive instanceof JavaArchive)\n         {\n             Map<ArchivePath, Node> beansXmls;\n             beansXmls = archive.getContent(Filters.include(\"/META-INF/beans.xml\"));\n-            beansXmlPresent = parseBeansXmls(beansXmls);\n+            beansXmlPresent = parseBeansXmls(archive.getName(), beansXmls);\n             if (beansXmlPresent)\n             {\n                 scanArchiveClasses(archive);\n@@ -139,18 +139,21 @@ private void scanArchiveClasses(Archive<?> archive)\n     /**\n      * Take all given archives and add the bean.xml files to the\n      * ScannerService.\n+     * @param archiveName is needed if multiple archives are used, e.g. in a WebArchive\n      * @param beansXmls\n      * @return <code>true</code> if at least one beans.xml has been parsed.\n      */\n-    private boolean parseBeansXmls(Map<ArchivePath, Node> beansXmls)\n+    private boolean parseBeansXmls(String archiveName, Map<ArchivePath, Node> beansXmls)\n     {\n         boolean beansXmlPresent = false ;\n         for (final Map.Entry<ArchivePath, Node> entry : beansXmls.entrySet())\n         {\n             try\n             {\n+                String urlLocation = \"archive://\" + archiveName + entry.getKey().get();\n+\n                 addWebBeansXmlLocation(\n-                        new URL(null, \"archive:/\" + entry.getKey().get(), new URLStreamHandler()\n+                        new URL(null, urlLocation, new URLStreamHandler()\n                         {\n                             @Override\n                             protected URLConnection openConnection(URL u) throws IOException"}]}}
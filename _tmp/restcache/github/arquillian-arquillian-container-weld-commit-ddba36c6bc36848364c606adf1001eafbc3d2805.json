{"commit":{"tree":"d289cbcf3610c379620ceadfdcd07668521bb67c","committed_date":"2012-02-16T05:51:30-08:00","authored_date":"2012-02-15T02:16:45-08:00","committer":{"login":"aslakknutsen","email":"aslak@redhat.com","name":"Aslak Knutsen"},"url":"/arquillian/arquillian-container-weld/commit/ddba36c6bc36848364c606adf1001eafbc3d2805","added":["weld-ee-embedded-1.1/src/main/java/org/jboss/arquillian/container/weld/ee/embedded_1_1/WebArchiveClassLoader.java","weld-ee-embedded-1.1/src/test/java/org/jboss/arquillian/container/weld/ee/embedded_1_1/BeforeBeanDiscoveryObserver.java"],"parents":[{"id":"95193f7f80797d623bbe400877f8966c1684c019"}],"message":"ARQ-753 Add support for loading Extensions from a WebArchive to the Weld EE Containers (SHRINKWRAP-369)","author":{"login":"mkouba","email":"mkouba@redhat.com","name":"Martin Kouba"},"modified":[{"diff":"@@ -34,6 +34,7 @@\n import org.jboss.arquillian.core.api.annotation.Inject;\n import org.jboss.shrinkwrap.api.Archive;\n import org.jboss.shrinkwrap.api.classloader.ShrinkWrapClassLoader;\n+import org.jboss.shrinkwrap.api.spec.WebArchive;\n import org.jboss.shrinkwrap.descriptor.api.Descriptor;\n import org.jboss.weld.bootstrap.api.Bootstrap;\n import org.jboss.weld.manager.api.WeldManager;\n@@ -42,6 +43,7 @@\n  * WeldEEMockConainer\n  *\n  * @author <a href=\"mailto:aslak@redhat.com\">Aslak Knutsen</a>\n+ * @author <a href=\"mailto:mkouba@redhat.com\">Martin Kouba</a>\n  * @version $Revision: $\n  */\n public class WeldEEMockContainer implements DeployableContainer<WeldEEMockConfiguration>\n@@ -86,7 +88,7 @@ public void start() throws LifecycleException\n \n    public ProtocolMetaData deploy(Archive<?> archive) throws DeploymentException\n    {  \n-      ShrinkWrapClassLoader classLoader = new ShrinkWrapClassLoader(archive.getClass().getClassLoader(), archive);\n+      ShrinkWrapClassLoader classLoader = getClassLoader(archive);\n       ContextClassLoaderManager classLoaderManager = new ContextClassLoaderManager(classLoader);\n       classLoaderManager.enable();\n       \n@@ -132,4 +134,10 @@ public void undeploy(Descriptor descriptor) throws DeploymentException\n    {\n       throw new UnsupportedOperationException(\"Weld EE Container does not support undeployment of Descriptors\");\n    }\n+\n+    private ShrinkWrapClassLoader getClassLoader(Archive<?> archive) {\n+        return (archive instanceof WebArchive) ? new WebArchiveClassLoader(archive.getClass().getClassLoader(), archive)\n+                : new ShrinkWrapClassLoader(archive.getClass().getClassLoader(), archive);\n+    }\n+\n }","filename":"weld-ee-embedded-1.1/src/main/java/org/jboss/arquillian/container/weld/ee/embedded_1_1/WeldEEMockContainer.java"},{"diff":"@@ -47,7 +47,7 @@ public static EnterpriseArchive createdeployment()\n                   .addAsModule(\n                         ShrinkWrap.create(WebArchive.class)\n                            .addClasses(\n-                              WeldEmbeddedIntegrationWARTestCase.class,\n+                              WeldEmbeddedIntegrationEARTestCase.class,\n                               MyBean.class)\n                            .addAsWebResource(\n                               EmptyAsset.INSTANCE, ArchivePaths.create(\"beans.xml\"))","filename":"weld-ee-embedded-1.1/src/test/java/org/jboss/arquillian/container/weld/ee/embedded_1_1/WeldEmbeddedIntegrationEARTestCase.java"},{"diff":"@@ -16,6 +16,7 @@\n  */\n package org.jboss.arquillian.container.weld.ee.embedded_1_1;\n \n+import javax.enterprise.inject.spi.Extension;\n import javax.inject.Inject;\n \n import junit.framework.Assert;\n@@ -45,14 +46,19 @@ public static WebArchive createdeployment()\n       return ShrinkWrap.create(WebArchive.class, \"test.war\")\n                   .addClasses(\n                         WeldEmbeddedIntegrationWARTestCase.class,\n+                        BeforeBeanDiscoveryObserver.class,\n                         MyBean.class)\n+                  .addAsServiceProvider(Extension.class, BeforeBeanDiscoveryObserver.class)\n                   .addAsWebResource(\n                         EmptyAsset.INSTANCE, ArchivePaths.create(\"beans.xml\"));\n    }\n    \n    @Inject\n    private MyBean instanceVariable;\n-   \n+\n+   @Inject\n+   private BeforeBeanDiscoveryObserver extension;\n+\n    @Test\n    public void shouldBeAbleToInjectBeanAsInstanceVariable() throws Exception \n    {\n@@ -72,4 +78,12 @@ public void shouldBeAbleToInjectBeanAsArgumentVariable(MyBean argumentVariable)\n       \n       Assert.assertEquals(\"aslak\", argumentVariable.getName());\n    }\n+\n+   @Test\n+   public void testExtensionIsLoaded()\n+   {\n+       Assert.assertNotNull(extension);\n+       Assert.assertTrue(BeforeBeanDiscoveryObserver.eventObserved);\n+   }\n+\n }","filename":"weld-ee-embedded-1.1/src/test/java/org/jboss/arquillian/container/weld/ee/embedded_1_1/WeldEmbeddedIntegrationWARTestCase.java"}],"id":"ddba36c6bc36848364c606adf1001eafbc3d2805"}}
{"commit":{"id":"8094aa358d238fa100c049ec782aaaa2677ed653","message":"ARQ-167 Add support for EJB.mappedName. Using OpenEJB as test case.","committer":{"name":"Aslak Knutsen","email":"aslak@redhat.com","login":"aslakknutsen"},"committed_date":"2011-03-17T18:58:06-07:00","url":"/arquillian/arquillian-container-openejb/commit/8094aa358d238fa100c049ec782aaaa2677ed653","authored_date":"2011-03-15T10:08:19-07:00","parents":[{"id":"1140a8e39c259ac236ef64d85acbe8ffb0f543cd"}],"author":{"name":"drallen","email":"david.allen@acm.org","login":"drallen"},"modified":[{"filename":"containers/openejb-embedded-3.1/src/main/java/org/jboss/arquillian/container/openejb/embedded_3_1/OpenEJBTestEnricher.java","diff":"@@ -139,7 +139,7 @@ protected InitialContext createContext() throws Exception\n    }\n \n    @Override\n-   protected Object lookupEJB(Class<?> fieldType) throws Exception\n+   protected Object lookupEJB(Class<?> fieldType, String mappedName) throws Exception\n    {\n //      InjectionBuilder injectionBuilder = new InjectionBuilder(Thread.currentThread().getContextClassLoader());\n //\n@@ -154,6 +154,10 @@ protected Object lookupEJB(Class<?> fieldType) throws Exception\n //      }\n       \n       InitialContext initcontext = createContext();\n+      if(mappedName != null)\n+      {\n+         return initcontext.lookup(mappedName);\n+      }\n       return lookupRecursive(fieldType, initcontext, initcontext.listBindings(\"/\"));\n    }\n "},{"filename":"containers/openejb-embedded-3.1/src/test/java/org/jboss/arquillian/container/openejb/embedded_3_1/OpenEJBConfigTestCase.java","diff":"@@ -18,7 +18,6 @@\n package org.jboss.arquillian.container.openejb.embedded_3_1;\n \n import javax.ejb.EJB;\n-import javax.naming.NamingException;\n \n import org.jboss.arquillian.api.Deployment;\n import org.jboss.arquillian.container.openejb.embedded_3_1.ejb.DataBean;\n@@ -60,7 +59,7 @@ public static JavaArchive createDeployment()\n    /**\n     * The EJB proxy used for invocations\n     */\n-   @EJB\n+   @EJB(mappedName=\"dataBeans/DataLocalBusinessLocal\")\n    private DataLocalBusiness bean;\n \n    //-------------------------------------------------------------------------------------||"},{"filename":"containers/openejb-embedded-3.1/src/test/java/org/jboss/arquillian/container/openejb/embedded_3_1/ejb/DataBean.java","diff":"@@ -5,7 +5,7 @@\n import javax.ejb.Stateless;\n import javax.sql.DataSource;\n \n-@Stateless\n+@Stateless(name=\"dataBeans/DataLocalBusiness\")\n @Local(DataLocalBusiness.class)\n public class DataBean implements DataLocalBusiness\n {"},{"filename":"containers/openejb-embedded-3.1/src/test/resources/jndi.properties","diff":"@@ -1,5 +1,5 @@\n # This property file should not be used during testing\n-java.naming.factory.initial=org.apache.openejb.client.LocalInitialContextFactory\n+# java.naming.factory.initial=org.apache.openejb.client.LocalInitialContextFactory\n productionDatabase=new://Resource?type=DataSource\n productionDatabase.JdbcDriver=org.hsqldb.jdbcDriver\n productionDatabase.JdbcUrl=jdbc:hsqldb:mem:testdb"}],"tree":"3e67a31eee663df720bc2b3ba2b3b783d13f6fb5"}}
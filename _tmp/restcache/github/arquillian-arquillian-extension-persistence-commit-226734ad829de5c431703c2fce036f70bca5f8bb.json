{"commit":{"tree":"49e17563e76cde81b89c5ec91470ac4d15ff70b9","parents":[{"id":"03fff373b57882ba84fc6c07fa41990022216950"}],"authored_date":"2012-07-04T08:20:35-07:00","id":"226734ad829de5c431703c2fce036f70bca5f8bb","added":["api/src/main/java/org/jboss/arquillian/persistence/JpaCacheEviction.java","api/src/main/java/org/jboss/arquillian/persistence/JpaCacheEvictionStrategy.java","impl/src/main/java/org/jboss/arquillian/persistence/jpa/cache/FullCacheEvictionStrategy.java","impl/src/main/java/org/jboss/arquillian/persistence/jpa/cache/JpaCacheEvictionConfiguration.java","impl/src/main/java/org/jboss/arquillian/persistence/jpa/cache/JpaCacheEvictionHandler.java","impl/src/test/java/org/jboss/arquillian/persistence/jpa/cache/JpaCacheEvictionConfigurationTest.java","impl/src/test/java/org/jboss/arquillian/persistence/jpa/cache/JpaCacheEvictionHandlerTest.java","impl/src/test/resources/arquillian-jpacacheeviction.xml","impl/src/test/resources/properties/jpacacheeviction.arquillian.persistence.properties","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/JdbcDriverArchiveAppender.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSql2008DataSource.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSql2008DataSourceArchiveCreator.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSql2008DataSourceExtension.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSqlDriverArchiveAppender.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDataSource.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDataSourceArchiveCreator.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDataSourceExtension.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDriverArchiveAppender.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDataSource.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDataSourceArchiveCreator.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDataSourceExtension.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDriverArchiveAppender.java","int-tests-testng/src/test/resources-jboss-7.0.2-mysql/META-INF/services/org.jboss.arquillian.core.spi.LoadableExtension","int-tests-testng/src/test/resources-jboss-7.0.2-mysql/arquillian.xml","int-tests-testng/src/test/resources-jboss-7.0.2-mysql/test-jpacacheeviction-persistence.xml","int-tests-testng/src/test/resources-jboss-7.0.2-mysql/test-persistence.xml","int-tests-testng/src/test/resources-jboss-7.1.1-postgresql/META-INF/services/org.jboss.arquillian.core.spi.LoadableExtension","int-tests-testng/src/test/resources-jboss-7.1.1-postgresql/arquillian.xml","int-tests-testng/src/test/resources-jboss-7.1.1-postgresql/test-persistence.xml","int-tests/src/test/java-jpa-cache-eviction/org/jboss/arquillian/integration/persistence/jpa/cache/GameBeanDoublePersistenceContext.java","int-tests/src/test/java-jpa-cache-eviction/org/jboss/arquillian/integration/persistence/jpa/cache/JpaCacheEvictionMultiplePersistenceUnitsTest.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/JdbcDriverArchiveAppender.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSql2008DataSource.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSql2008DataSourceArchiveCreator.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSql2008DataSourceExtension.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mssql/MsSqlDriverArchiveAppender.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDataSource.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDataSourceArchiveCreator.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDataSourceExtension.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/mysql/MySqlDriverArchiveAppender.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDataSource.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDataSourceArchiveCreator.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDataSourceExtension.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/postgresql/PostgreSqlDriverArchiveAppender.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/jpa/cache/Game.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/jpa/cache/GameBean.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/jpa/cache/JpaCacheEvictionTest.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/jpa/cache/Platform.java","int-tests/src/test/resources-glassfish-3.1/test-jpacacheeviction-persistence.xml","int-tests/src/test/resources-jboss-7.0.2-mysql/META-INF/services/org.jboss.arquillian.core.spi.LoadableExtension","int-tests/src/test/resources-jboss-7.0.2-mysql/arquillian.xml","int-tests/src/test/resources-jboss-7.0.2-mysql/test-jpacacheeviction-persistence.xml","int-tests/src/test/resources-jboss-7.0.2-mysql/test-persistence.xml","int-tests/src/test/resources-jboss-7.0.2/test-jpacacheeviction-persistence.xml","int-tests/src/test/resources-jboss-7.1.1-postgresql/META-INF/services/org.jboss.arquillian.core.spi.LoadableExtension","int-tests/src/test/resources-jboss-7.1.1-postgresql/arquillian.xml","int-tests/src/test/resources-jboss-7.1.1-postgresql/test-persistence.xml"],"url":"/arquillian/arquillian-extension-persistence/commit/226734ad829de5c431703c2fce036f70bca5f8bb","committer":{"email":"bartosz.majsak@gmail.com","name":"Bartosz Majsak","login":"bartoszmajsak"},"committed_date":"2012-08-13T03:17:32-07:00","removed":["int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSqlDriver.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSql2008DataSource.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSql2008DataSourceArchiveCreator.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSql2008DataSourceExtension.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSqlDriver.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSql2008DataSource.java","int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSql2008DataSourceArchiveCreator.java","int-tests/src/test/java/org/jboss/arquillian/integration/persistence/datasource/deployment/MsSql2008DataSourceExtension.java"],"message":"[ARQ-1058] JPA 2nd level cache support.\n* Added coverage for MySQL 5.5 and PostgreSQL 9.1\n* Updated Arquillian Core to 1.0.2","author":{"email":"thradec@redhat.com","name":"Tomas Hradec","login":""},"modified":[{"filename":"README.md","diff":"@@ -13,15 +13,18 @@ It comes with following features:\n     * [DBUnit](http://dbunit.org) with **XML**, **XLS**, **YAML**  and **JSON** supported as data sets format.\n     * Custom SQL scripts.\n * Comparing database state at the end of the test using given data sets (with column exclusion).\n+* Eviction JPA second level cache between test method invocation, see `@JpaCacheEviction`.\n \n ##### Containers used for testing\n-- Glassfish 3.1 Embedded\n+- Glassfish 3.1.2 Embedded\n - JBoss AS 7.0.2 Final (managed) \n-- JBoss AS 7.1.0.Final (managed)\n+- JBoss AS 7.1.1.Final (managed)\n \n ##### Verified with follolwing databases\n - HSQL\n - MS SQL 2008 Express (with Microsoft JDBC Driver)\n+- MySQL 5.5.24\n+- PostgreSQL 9.1.4\n \n Enough talking, let's see it in action!\n \n@@ -68,4 +71,4 @@ seeds the database using file in YAML format, and latter verifies database state\n \n This example is taken from **integration tests** written for this project, so feel free to have a closer look. \n \n-But it's that easy! And there's more to come!\n\\ No newline at end of file\n+But it's that easy! And there's more to come!"},{"filename":"impl/src/main/java/org/jboss/arquillian/persistence/core/configuration/ConfigurationExporter.java","diff":"@@ -91,7 +91,15 @@ private void serializeFieldsToProperties(final OutputStream output)\n \n    private String convertToPropertyValue(Object object)\n    {\n-      String convertedValue = object.toString();\n+      String convertedValue;\n+      if (object instanceof Class)\n+      {\n+         convertedValue = ((Class<?>)object).getName();\n+      }\n+      else \n+      {\n+         convertedValue = object.toString();\n+      }\n       if (String[].class.isInstance(object))\n       {\n          convertedValue = Arrays.toString((String[])object);"},{"filename":"impl/src/main/java/org/jboss/arquillian/persistence/core/configuration/ConfigurationTypeConverter.java","diff":"@@ -22,9 +22,7 @@\n import java.net.URISyntaxException;\n import java.net.URL;\n \n-import org.jboss.arquillian.persistence.TransactionMode;\n import org.jboss.arquillian.persistence.core.util.Strings;\n-import org.jboss.arquillian.persistence.dbunit.data.descriptor.Format;\n \n /**\n *\n@@ -173,6 +171,18 @@ else if (String[].class.equals(to))\n \n             return to.cast(convertedArray);\n          }\n+         else if (Class.class.equals(to) )\n+         {\n+            try\n+            {\n+               Object clazz = Class.forName(value);\n+               return to.cast(clazz);\n+            }\n+            catch (Exception e)\n+            {\n+               throw new IllegalArgumentException(\"Unable to find class [\" + value + \"].\", e);\n+            }\n+         }\n          else // Try to create instance via reflection\n          {\n             try"},{"filename":"impl/src/main/java/org/jboss/arquillian/persistence/core/container/RemotePersistenceExtension.java","diff":"@@ -30,6 +30,7 @@\n import org.jboss.arquillian.persistence.dbunit.DBUnitDataStateLogger;\n import org.jboss.arquillian.persistence.dbunit.DBUnitPersistenceTestLifecycleHandler;\n import org.jboss.arquillian.persistence.dbunit.configuration.DBUnitConfigurationRemoteProducer;\n+import org.jboss.arquillian.persistence.jpa.cache.JpaCacheEvictionHandler;\n \n /**\n  * Defines all the bindings for Arquillian extension run in the\n@@ -49,9 +50,8 @@ public void register(ExtensionBuilder builder)\n \n       builder.observer(PersistenceConfigurationRemoteProducer.class)\n              .observer(CommandServiceProducer.class)\n-             .observer(TestTransactionWrapper.class);\n-\n-\n+             .observer(TestTransactionWrapper.class)\n+             .observer(JpaCacheEvictionHandler.class);\n    }\n \n    private void registerDBUnitHandlers(ExtensionBuilder builder)"},{"filename":"impl/src/main/java/org/jboss/arquillian/persistence/core/deployment/PersistenceExtensionArchiveAppender.java","diff":"@@ -31,11 +31,13 @@\n import org.jboss.arquillian.core.api.Instance;\n import org.jboss.arquillian.core.api.annotation.Inject;\n import org.jboss.arquillian.persistence.core.client.PersistenceExtension;\n+import org.jboss.arquillian.persistence.core.configuration.Configuration;\n import org.jboss.arquillian.persistence.core.configuration.ConfigurationExporter;\n import org.jboss.arquillian.persistence.core.configuration.PersistenceConfiguration;\n import org.jboss.arquillian.persistence.core.configuration.PropertiesSerializer;\n import org.jboss.arquillian.persistence.core.container.RemotePersistenceExtension;\n import org.jboss.arquillian.persistence.dbunit.configuration.DBUnitConfiguration;\n+import org.jboss.arquillian.persistence.jpa.cache.JpaCacheEvictionConfiguration;\n import org.jboss.shrinkwrap.api.Archive;\n import org.jboss.shrinkwrap.api.Filters;\n import org.jboss.shrinkwrap.api.ShrinkWrap;\n@@ -76,6 +78,8 @@\n \n       addPersistenceConfigurationSerializedAsProperties(persistenceExtensionArchive);\n       addDBUnitConfigurationSerializedAsProperties(persistenceExtensionArchive);\n+      addJpaCacheEvictionConfigurationSerizedAsProperties(persistenceExtensionArchive);\n+      \n       return persistenceExtensionArchive;\n    }\n \n@@ -137,5 +141,15 @@ private void addDBUnitConfigurationSerializedAsProperties(final JavaArchive arch\n       return extensionProperties;\n    }\n \n+   private void addJpaCacheEvictionConfigurationSerizedAsProperties(JavaArchive archiveToExtend)\n+   {\n+      ByteArrayOutputStream output = new ByteArrayOutputStream();\n+      JpaCacheEvictionConfiguration config = new JpaCacheEvictionConfiguration();\n+\n+      Configuration.importTo(config).loadFrom(arquillianDescriptorInstance.get());\n+      Configuration.exportUsing(config).toProperties(output);\n+\n+      archiveToExtend.addAsResource(new ByteArrayAsset(output.toByteArray()), config.getPrefix() + \"properties\");\n+   }\n \n }"},{"filename":"impl/src/main/java/org/jboss/arquillian/persistence/dbunit/DBUnitDataHandler.java","diff":"@@ -18,7 +18,6 @@\n package org.jboss.arquillian.persistence.dbunit;\n \n import java.sql.SQLException;\n-import java.sql.Statement;\n \n import org.dbunit.database.DatabaseConnection;\n import org.dbunit.dataset.IDataSet;\n@@ -31,6 +30,7 @@\n import org.jboss.arquillian.persistence.DataSeedStrategy;\n import org.jboss.arquillian.persistence.core.data.DataHandler;\n import org.jboss.arquillian.persistence.core.data.descriptor.SqlScriptResourceDescriptor;\n+import org.jboss.arquillian.persistence.core.data.script.ScriptExecutor;\n import org.jboss.arquillian.persistence.core.event.CleanupData;\n import org.jboss.arquillian.persistence.core.event.CleanupDataUsingScript;\n import org.jboss.arquillian.persistence.core.event.CompareData;\n@@ -43,6 +43,7 @@\n import org.jboss.arquillian.persistence.dbunit.configuration.DBUnitConfiguration;\n import org.jboss.arquillian.persistence.dbunit.configuration.DBUnitDataSeedStrategyProvider;\n import org.jboss.arquillian.persistence.dbunit.dataset.DataSetRegister;\n+import org.jboss.arquillian.persistence.dbunit.exception.DBUnitConnectionException;\n import org.jboss.arquillian.persistence.dbunit.exception.DBUnitDataSetHandlingException;\n \n /**\n@@ -88,7 +89,8 @@ public void compare(@Observes CompareData compareDataEvent)\n       {\n          final IDataSet currentDataSet = databaseConnection.get().createDataSet();\n          final IDataSet expectedDataSet = DataSetUtils.mergeDataSets(dataSetRegister.get().getExpected());\n-         new DataSetComparator(compareDataEvent.getColumnsToExclude()).compare(currentDataSet, expectedDataSet, assertionErrorCollector.get());\n+         new DataSetComparator(compareDataEvent.getColumnsToExclude()).compare(currentDataSet, expectedDataSet,\n+               assertionErrorCollector.get());\n       }\n       catch (Exception e)\n       {\n@@ -125,29 +127,13 @@ public void executeScripts(@Observes ExecuteScripts executeScriptsEvent)\n \n    private void executeScript(String script)\n    {\n-      Statement statement = null;\n       try\n       {\n-         statement = databaseConnection.get().getConnection().createStatement();\n-         statement.execute(script);\n+         new ScriptExecutor(databaseConnection.get().getConnection()).execute(script);\n       }\n-      catch (Exception e)\n-      {\n-         throw new DBUnitDataSetHandlingException(\"Unable to execute script: \" + script, e);\n-      }\n-      finally\n+      catch (SQLException e)\n       {\n-         if (statement != null)\n-         {\n-            try\n-            {\n-               statement.close();\n-            }\n-            catch (SQLException e)\n-            {\n-               throw new DBUnitDataSetHandlingException(\"Unable to close statement after script execution.\", e);\n-            }\n-         }\n+         throw new DBUnitConnectionException(\"Unable to obtain JDBC connection\", e);\n       }\n    }\n \n@@ -163,13 +149,15 @@ private DatabaseOperation getSelectedSeedingStrategy()\n       final DBUnitConfiguration dbUnitConfiguration = dbunitConfigurationInstance.get();\n       final DataSeedStrategy dataSeedStrategy = persistenceExtensionFeatureResolverInstance.get().getDataSeedStrategy();\n       final boolean useIdentityInsert = dbUnitConfiguration.isUseIdentityInsert();\n-      final DatabaseOperation selectedSeedingStrategy = dataSeedStrategy.provide(new DBUnitDataSeedStrategyProvider(useIdentityInsert));\n+      final DatabaseOperation selectedSeedingStrategy = dataSeedStrategy.provide(new DBUnitDataSeedStrategyProvider(\n+            useIdentityInsert));\n       return selectedSeedingStrategy;\n    }\n \n    private void cleanDatabase(CleanupStrategy cleanupStrategy)\n    {\n-      final CleanupStrategyExecutor cleanupStrategyExecutor = cleanupStrategy.provide(new CleanupStrategyProvider(databaseConnection.get(), dataSetRegister.get()));\n+      final CleanupStrategyExecutor cleanupStrategyExecutor = cleanupStrategy.provide(new CleanupStrategyProvider(\n+            databaseConnection.get(), dataSetRegister.get()));\n       cleanupStrategyExecutor.cleanupDatabase(dbunitConfigurationInstance.get().getExcludeTablesFromCleanup());\n    }\n "},{"filename":"impl/src/test/java/org/jboss/arquillian/persistence/core/data/script/ScriptExecutorTest.java","diff":"@@ -28,6 +28,7 @@\n import java.sql.SQLException;\n import java.sql.Statement;\n import java.util.List;\n+import java.util.Scanner;\n \n import org.jboss.arquillian.persistence.core.data.script.ScriptExecutor;\n import org.junit.Before;\n@@ -61,8 +62,6 @@ public void initializeScriptExecutor() throws SQLException\n    @Test\n    public void should_execute_two_statements_when_script_contains_two_insert_statements() throws Exception\n    {\n-      initializeScriptExecutor();\n-\n       // when\n       scriptExecutor.execute(loadFileAsString(\"scripts/two-inserts.sql\"));\n \n@@ -73,8 +72,6 @@ public void should_execute_two_statements_when_script_contains_two_insert_statem\n    @Test\n    public void should_execute_two_statements_when_script_contains_two_insert_statements_and_comment() throws Exception\n    {\n-      initializeScriptExecutor();\n-\n       // when\n       scriptExecutor.execute(loadFileAsString(\"scripts/two-inserts-with-comment.sql\"));\n \n@@ -119,7 +116,7 @@ public void should_split_into_three_statements_from_inline_script() throws Excep\n    private String loadFileAsString(final String scriptFile)\n    {\n       final InputStream resourceAsStream = Thread.currentThread().getContextClassLoader().getResourceAsStream(scriptFile);\n-      return new java.util.Scanner(resourceAsStream).useDelimiter(\"\\\\A\").next();\n+      return new Scanner(resourceAsStream).useDelimiter(\"\\\\A\").next();\n    }\n \n }"},{"filename":"int-tests-testng/src/test/java/org/jboss/arquillian/integration/persistence/example/NonDeployableUserPersistenceTest.java","diff":"@@ -29,8 +29,10 @@\n import org.jboss.arquillian.integration.persistence.example.UserAccount;\n import org.jboss.arquillian.integration.persistence.util.Query;\n import org.jboss.arquillian.persistence.ApplyScriptBefore;\n+import org.jboss.arquillian.persistence.Cleanup;\n import org.jboss.arquillian.persistence.CleanupUsingScript;\n import org.jboss.arquillian.persistence.ShouldMatchDataSet;\n+import org.jboss.arquillian.persistence.TestExecutionPhase;\n import org.jboss.arquillian.persistence.TransactionMode;\n import org.jboss.arquillian.persistence.Transactional;\n import org.jboss.arquillian.persistence.UsingDataSet;\n@@ -195,6 +197,7 @@ public void should_add_address_to_user_account_and_verify_using_multiple_files()\n \n    @Test\n    @Transactional\n+   @Cleanup(phase = TestExecutionPhase.BEFORE)\n    public void should_persist_users_within_transaction() throws Exception\n    {\n       // given"},{"filename":"int-tests-testng/src/test/resources-jboss-7.1.1-mssql/META-INF/services/org.jboss.arquillian.core.spi.LoadableExtension","diff":"@@ -1,2 +1,2 @@\n org.jboss.arquillian.integration.persistence.testextension.PersistenceExtensionTester\n-org.jboss.arquillian.integration.persistence.datasource.deployment.MsSql2008DataSourceExtension\n\\ No newline at end of file\n+org.jboss.arquillian.integration.persistence.datasource.mssql.MsSql2008DataSourceExtension\n\\ No newline at end of file"},{"filename":"int-tests/src/main/java/org/jboss/arquillian/integration/persistence/example/Address.java","diff":"@@ -21,11 +21,13 @@\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n import javax.persistence.Id;\n+import javax.persistence.Table;\n import javax.persistence.Version;\n import javax.validation.constraints.NotNull;\n import javax.validation.constraints.Size;\n \n @Entity\n+@Table(name = \"address\")\n public class Address\n {\n "},{"filename":"int-tests/src/main/java/org/jboss/arquillian/integration/persistence/example/UserAccount.java","diff":"@@ -29,6 +29,7 @@\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n import javax.validation.constraints.NotNull;\n import javax.validation.constraints.Size;\n \n@@ -38,6 +39,7 @@\n  *\n  */\n @Entity\n+@Table(name = \"useraccount\")\n public class UserAccount implements Serializable\n {\n "},{"filename":"int-tests/src/test/resources-jboss-7.1.1-mssql/META-INF/services/org.jboss.arquillian.core.spi.LoadableExtension","diff":"@@ -1,2 +1,2 @@\n org.jboss.arquillian.integration.persistence.testextension.PersistenceExtensionTester\n-org.jboss.arquillian.integration.persistence.datasource.deployment.MsSql2008DataSourceExtension\n\\ No newline at end of file\n+org.jboss.arquillian.integration.persistence.datasource.mssql.MsSql2008DataSourceExtension\n\\ No newline at end of file"},{"filename":"int-tests/src/test/resources/datasets/single-user.xls"},{"filename":"pom.xml","diff":"@@ -334,6 +334,98 @@\n             </executions>\n           </plugin>\n           <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-surefire-plugin</artifactId>\n+            <configuration>\n+              <excludes>\n+                <!-- This test is causing problems with @DataSourceDefinition.\n+                  For some reason it's not picked up before test.jar deployment, so persistence.xml\n+                  is referring to non existing datasource. -->\n+                <exclude>**/UserPersistenceEarDeploymentTest.java</exclude>\n+                <!-- This test is using custom SQL which I don't want to\n+                  pollute with \"SET INSERT_IDENTITY\", because they should be portable. Hence\n+                  it's not essential for this profile to verify if this behaviour is correct\n+                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded\n+                  database. -->\n+                <exclude>**/DataCleanupStrategiesTest.java</exclude>\n+                <!-- Due to the bug in JBoss 7.1.1.Final / Infinispan cache eviction\n+                throws NPE. This feature has been tested with 7.0.2.Final as for now. -->\n+                <exclude>**/JpaCacheEvictionTest.java</exclude>\n+              </excludes>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+        <testResources>\n+          <testResource>\n+            <directory>src/test/resources</directory>\n+          </testResource>\n+          <testResource>\n+            <directory>src/test/resources-jboss-7.1.1-mssql</directory>\n+          </testResource>\n+        </testResources>\n+      </build>\n+    </profile>\n+    <profile>\n+      <id>jbossas-7.0-managed-mysql</id>\n+      <dependencies>\n+        <dependency>\n+          <groupId>org.jboss.arquillian.protocol</groupId>\n+          <artifactId>arquillian-protocol-servlet</artifactId>\n+          <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+          <groupId>org.jboss.as</groupId>\n+          <artifactId>jboss-as-arquillian-container-managed</artifactId>\n+          <version>7.0.2.Final</version>\n+          <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+          <groupId>org.jboss.spec</groupId>\n+          <artifactId>jboss-javaee-6.0</artifactId>\n+          <version>${version.jbossas_spec}</version>\n+          <type>pom</type>\n+          <scope>provided</scope>\n+          <exclusions>\n+            <exclusion>\n+              <groupId>xalan</groupId>\n+              <artifactId>xalan</artifactId>\n+            </exclusion>\n+          </exclusions>\n+        </dependency>\n+        <dependency>\n+          <groupId>mysql</groupId>\n+          <artifactId>mysql-connector-java</artifactId>\n+          <version>5.1.21</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack</id>\n+                <phase>process-test-classes</phase>\n+                <goals>\n+                  <goal>unpack</goal>\n+                </goals>\n+                <configuration>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>org.jboss.as</groupId>\n+                      <artifactId>jboss-as-dist</artifactId>\n+                      <version>7.0.2.Final</version>\n+                      <type>zip</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${project.build.directory}</outputDirectory>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+          <plugin>\n             <groupId>org.codehaus.mojo</groupId>\n             <artifactId>build-helper-maven-plugin</artifactId>\n             <executions>\n@@ -345,7 +437,7 @@\n                 </goals>\n                 <configuration>\n                   <sources>\n-                    <source>src/test/java-as7-mssql</source>\n+                    <source>src/test/java-jpa-cache-eviction</source>\n                   </sources>\n                 </configuration>\n               </execution>\n@@ -375,11 +467,104 @@\n             <directory>src/test/resources</directory>\n           </testResource>\n           <testResource>\n-            <directory>src/test/resources-jboss-7.1.1-mssql</directory>\n+            <directory>src/test/resources-jboss-7.0.2-mysql</directory>\n+          </testResource>\n+        </testResources>\n+      </build>\n+    </profile>\n+    <profile>\n+      <id>jbossas-7.1-managed-postgresql</id>\n+      <dependencies>\n+        <dependency>\n+          <groupId>org.jboss.arquillian.protocol</groupId>\n+          <artifactId>arquillian-protocol-servlet</artifactId>\n+          <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+          <groupId>org.jboss.as</groupId>\n+          <artifactId>jboss-as-arquillian-container-managed</artifactId>\n+          <version>7.1.1.Final</version>\n+          <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+          <groupId>org.jboss.spec</groupId>\n+          <artifactId>jboss-javaee-6.0</artifactId>\n+          <version>${version.jbossas_spec}</version>\n+          <type>pom</type>\n+          <scope>provided</scope>\n+          <exclusions>\n+            <exclusion>\n+              <groupId>xalan</groupId>\n+              <artifactId>xalan</artifactId>\n+            </exclusion>\n+          </exclusions>\n+        </dependency>\n+        <dependency>\n+          <groupId>postgresql</groupId>\n+          <artifactId>postgresql</artifactId>\n+          <version>9.1-901.jdbc4</version>\n+          <scope>test</scope>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <version>2.3</version>\n+            <executions>\n+              <execution>\n+                <id>unpack</id>\n+                <phase>process-test-classes</phase>\n+                <goals>\n+                  <goal>unpack</goal>\n+                </goals>\n+                <configuration>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>org.jboss.as</groupId>\n+                      <artifactId>jboss-as-dist</artifactId>\n+                      <version>7.1.1.Final</version>\n+                      <type>zip</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${project.build.directory}</outputDirectory>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-surefire-plugin</artifactId>\n+            <configuration>\n+              <excludes>\n+                <!-- This test is causing problems with @DataSourceDefinition.\n+                  For some reason it's not picked up before test.jar deployment, so persistence.xml\n+                  is referring to non existing datasource. -->\n+                <exclude>**/UserPersistenceEarDeploymentTest.java</exclude>\n+                <!-- This test is using custom SQL which I don't want to\n+                  pollute with \"SET INSERT_IDENTITY\", because they should be portable. Hence\n+                  it's not essential for this profile to verify if this behaviour is correct\n+                  this test can be also skipped. It's tested on JBoss AS 7.0.2 with embedded\n+                  database. -->\n+                <exclude>**/DataCleanupStrategiesTest.java</exclude>\n+                <!-- Due to the bug in JBoss 7.1.1.Final / Infinispan cache eviction\n+                throws NPE. This feature has been tested with 7.0.2.Final as for now. -->\n+                <exclude>**/JpaCacheEvictionTest.java</exclude>\n+              </excludes>\n+            </configuration>\n+          </plugin>\n+        </plugins>\n+        <testResources>\n+          <testResource>\n+            <directory>src/test/resources</directory>\n+          </testResource>\n+          <testResource>\n+            <directory>src/test/resources-jboss-7.1.1-postgresql</directory>\n           </testResource>\n         </testResources>\n       </build>\n     </profile>\n-\n   </profiles>\n </project>"}]}}
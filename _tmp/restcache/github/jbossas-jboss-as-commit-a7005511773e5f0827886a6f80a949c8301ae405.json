{"commit":{"author":{"login":"wolfc","name":"Carlo de Wolf","email":"cdewolf@redhat.com"},"url":"/jbossas/jboss-as/commit/a7005511773e5f0827886a6f80a949c8301ae405","id":"a7005511773e5f0827886a6f80a949c8301ae405","parents":[{"id":"dea0688de9be51992edfc137c4b40f4e5865227a"}],"message":"JBAS-9181: an embedded server factory with a clean class path","removed":["server/src/main/java/org/jboss/as/server/InitialModuleLoaderFactory.java","server/src/main/java/org/jboss/as/server/ServerStartException.java","server/src/main/java/org/jboss/as/server/StandaloneServer.java","server/src/main/java/org/jboss/as/server/EmbeddedServerFactory.java"],"tree":"7e1ab949632ffa1b0085cce4663277ca74d46c8a","modified":[{"diff":"@@ -53,7 +53,7 @@\n \n         <dependency>\n             <groupId>org.jboss.as</groupId>\n-            <artifactId>jboss-as-server</artifactId>\n+            <artifactId>jboss-as-embedded</artifactId>\n         </dependency>\n \n         <dependency>","filename":"arquillian/container-embedded/pom.xml"},{"diff":"@@ -16,14 +16,6 @@\n  */\n package org.jboss.as.arquillian.container.embedded;\n \n-import java.io.File;\n-import java.lang.management.ManagementFactory;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.UndeclaredThrowableException;\n-import java.util.Properties;\n-\n-import javax.management.MBeanServerConnection;\n-\n import org.jboss.arquillian.protocol.jmx.JMXMethodExecutor;\n import org.jboss.arquillian.protocol.jmx.JMXMethodExecutor.ExecutionType;\n import org.jboss.arquillian.protocol.jmx.JMXTestRunnerMBean;\n@@ -31,8 +23,15 @@\n import org.jboss.arquillian.spi.Context;\n import org.jboss.arquillian.spi.LifecycleException;\n import org.jboss.as.arquillian.container.AbstractDeployableContainer;\n-import org.jboss.as.server.EmbeddedServerFactory;\n-import org.jboss.as.server.StandaloneServer;\n+import org.jboss.as.embedded.EmbeddedServerFactory;\n+import org.jboss.as.embedded.StandaloneServer;\n+\n+import javax.management.MBeanServerConnection;\n+import java.io.File;\n+import java.lang.management.ManagementFactory;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.UndeclaredThrowableException;\n+import java.util.Properties;\n \n /**\n  * JBossASEmbeddedContainer","filename":"arquillian/container-embedded/src/main/java/org/jboss/as/arquillian/container/embedded/JBossAsEmbeddedContainer.java"},{"diff":"@@ -477,6 +477,10 @@\n             <maven-resource group=\"org.jboss.as\" artifact=\"jboss-as-ejb3\"/>\n         </module-def>\n \n+        <module-def name=\"org.jboss.as.embedded\">\n+            <maven-resource group=\"org.jboss.as\" artifact=\"jboss-as-embedded\"/>\n+        </module-def>\n+\n         <module-def name=\"org.jboss.as.host-controller\">\n             <maven-resource group=\"org.jboss.as\" artifact=\"jboss-as-host-controller\"/>\n         </module-def>","filename":"build/build.xml"},{"diff":"@@ -48,6 +48,7 @@\n         <module name=\"org.jboss.as.controller\"/>\n         <module name=\"org.jboss.as.deployment-repository\"/>\n         <module name=\"org.jboss.as.domain-http-api\"/>\n+        <module name=\"org.jboss.as.embedded\"/>\n         <module name=\"org.jboss.as.logging\"/>\n         <module name=\"org.jboss.as.naming\"/>\n         <module name=\"org.jboss.as.osgi\"/>","filename":"build/src/main/resources/modules/org/jboss/as/server/main/module.xml"},{"diff":"@@ -38,8 +38,8 @@\n        <module name=\"org.jboss.arquillian.spi\" export=\"true\"/>\n        <module name=\"org.jboss.arquillian.testenricher.msc\" export=\"true\"/>\n        <module name=\"org.jboss.arquillian.testenricher.osgi\" export=\"true\"/>\n+       <module name=\"org.jboss.as.embedded\" export=\"true\"/>\n        <module name=\"org.jboss.as.jmx\" export=\"true\"/>\n-       <module name=\"org.jboss.as.server\" export=\"true\"/>\n        <module name=\"org.jboss.marshalling.river\" export=\"true\"/>\n        <module name=\"org.jboss.osgi.spi\" export=\"true\"/>\n        <module name=\"org.jboss.shrinkwrap.api\" export=\"true\"/>","filename":"build/src/main/resources/modules/org/jboss/surefire/arquillian-deps/main/module.xml"},{"diff":"@@ -203,6 +203,7 @@\n         <module>domain-http-api</module>\n         <module>ee</module>\n         <module>ejb3</module>\n+        <module>embedded</module>\n         <module>host-controller</module>\n         <module>jaxrs</module>\n         <module>jmx</module>\n@@ -612,6 +613,12 @@\n \n             <dependency>\n                 <groupId>org.jboss.as</groupId>\n+                <artifactId>jboss-as-embedded</artifactId>\n+                <version>${project.version}</version>\n+            </dependency>\n+\n+            <dependency>\n+                <groupId>org.jboss.as</groupId>\n                 <artifactId>jboss-as-host-controller</artifactId>\n                 <version>${project.version}</version>\n             </dependency>","filename":"pom.xml"},{"diff":"@@ -63,6 +63,10 @@\n         </dependency>\n         <dependency>\n             <groupId>org.jboss.as</groupId>\n+            <artifactId>jboss-as-embedded</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss.as</groupId>\n             <artifactId>jboss-as-process-controller</artifactId>\n         </dependency>\n         <dependency>","filename":"server/pom.xml"},{"diff":"@@ -21,14 +21,14 @@\n  */\n package org.jboss.as.server;\n \n-import java.io.File;\n-import java.io.IOException;\n-import java.util.Properties;\n-\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Properties;\n+\n /**\n  *\n  * @author <a href=\"kabir.khan@jboss.com\">Kabir Khan</a>\n@@ -56,18 +56,18 @@ public void createEmbeddedRoot() {\n     @Test\n     public void testNoSpecialConfig() throws Exception {\n         Properties props = new Properties();\n-        EmbeddedServerFactory.setupCleanDirectories(standardJBossHome, props);\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(standardJBossHome, props);\n         Assert.assertEquals(0, props.size());\n     }\n \n     @Test\n     public void testEmbeddedRootNoOverrides() throws Exception {\n         Properties props = new Properties();\n-        props.setProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n-        EmbeddedServerFactory.setupCleanDirectories(standardJBossHome, props);\n+        props.setProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(standardJBossHome, props);\n \n         Assert.assertEquals(4, props.size());\n-        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT));\n+        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT));\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_BASE_DIR, -1);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_DATA_DIR, 1);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_CONFIG_DIR, 1);\n@@ -76,11 +76,11 @@ public void testEmbeddedRootNoOverrides() throws Exception {\n     @Test\n     public void testEmbeddedRootServerOverride() throws Exception {\n         Properties props = new Properties();\n-        props.setProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n+        props.setProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_BASE_DIR, alternativeServer.getAbsolutePath());\n-        EmbeddedServerFactory.setupCleanDirectories(standardJBossHome, props);\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(standardJBossHome, props);\n         Assert.assertEquals(4, props.size());\n-        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT));\n+        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT));\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_BASE_DIR, -1);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_DATA_DIR, 2);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_CONFIG_DIR, 2);\n@@ -89,12 +89,12 @@ public void testEmbeddedRootServerOverride() throws Exception {\n     @Test\n     public void testDataAndConfigOverride() throws Exception {\n         Properties props = new Properties();\n-        props.setProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n+        props.setProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_DATA_DIR, alternativeDataDir.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_CONFIG_DIR, alternativeConfigDir.getAbsolutePath());\n-        EmbeddedServerFactory.setupCleanDirectories(standardJBossHome, props);\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(standardJBossHome, props);\n         Assert.assertEquals(4, props.size());\n-        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT));\n+        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT));\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_BASE_DIR, -1);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_DATA_DIR, 3);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_CONFIG_DIR, 4);\n@@ -103,13 +103,13 @@ public void testDataAndConfigOverride() throws Exception {\n     @Test\n     public void testServerOverrideAndDataAndConfigOverride() throws Exception {\n         Properties props = new Properties();\n-        props.setProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n+        props.setProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_BASE_DIR, alternativeServer.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_DATA_DIR, alternativeDataDir.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_CONFIG_DIR, alternativeConfigDir.getAbsolutePath());\n-        EmbeddedServerFactory.setupCleanDirectories(standardJBossHome, props);\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(standardJBossHome, props);\n         Assert.assertEquals(4, props.size());\n-        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT));\n+        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT));\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_BASE_DIR, -1);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_DATA_DIR, 3);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_CONFIG_DIR, 4);\n@@ -118,12 +118,12 @@ public void testServerOverrideAndDataAndConfigOverride() throws Exception {\n     @Test\n     public void testServerOverrideAndConfigOverride() throws Exception {\n         Properties props = new Properties();\n-        props.setProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n+        props.setProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT, embeddedRoot.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_BASE_DIR, alternativeServer.getAbsolutePath());\n         props.setProperty(ServerEnvironment.SERVER_CONFIG_DIR, alternativeConfigDir.getAbsolutePath());\n-        EmbeddedServerFactory.setupCleanDirectories(standardJBossHome, props);\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(standardJBossHome, props);\n         Assert.assertEquals(4, props.size());\n-        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedServerFactory.JBOSS_EMBEDDED_ROOT));\n+        Assert.assertEquals(embeddedRoot.getAbsolutePath(), props.getProperty(EmbeddedStandAloneServerFactory.JBOSS_EMBEDDED_ROOT));\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_BASE_DIR, -1);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_DATA_DIR, 2);\n         assertPropertyAndEmbeddedRootFile(props, ServerEnvironment.SERVER_CONFIG_DIR, 4);","filename":"server/src/test/java/org/jboss/as/server/EmbeddedServerFactorySetupUnitTestCase.java"},{"diff":"@@ -21,27 +21,8 @@\n  */\n package org.jboss.as.test.surefire.servermodule;\n \n-import static junit.framework.Assert.assertEquals;\n-import static junit.framework.Assert.assertNotNull;\n-import static junit.framework.Assert.assertTrue;\n-import static junit.framework.Assert.fail;\n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OUTCOME;\n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUCCESS;\n-\n-import java.io.BufferedInputStream;\n-import java.io.BufferedOutputStream;\n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.net.HttpURLConnection;\n-import java.net.URL;\n-import java.util.Collections;\n-import java.util.NoSuchElementException;\n-import java.util.Properties;\n-\n import org.jboss.as.server.Bootstrap;\n-import org.jboss.as.server.EmbeddedServerFactory;\n+import org.jboss.as.server.EmbeddedStandAloneServerFactory;\n import org.jboss.as.server.Main;\n import org.jboss.as.server.ServerEnvironment;\n import org.jboss.as.test.modular.utils.ShrinkWrapUtils;\n@@ -55,6 +36,25 @@\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n+import java.io.Closeable;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.util.Collections;\n+import java.util.NoSuchElementException;\n+import java.util.Properties;\n+\n+import static junit.framework.Assert.assertEquals;\n+import static junit.framework.Assert.assertNotNull;\n+import static junit.framework.Assert.assertTrue;\n+import static junit.framework.Assert.fail;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OUTCOME;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUCCESS;\n+\n /**\n  * Test the HTTP API upload functionality to ensure that a deployment is successfully\n  * transferred to the HTTP Server and processed by the model controller.\n@@ -77,7 +77,7 @@\n \n     @BeforeClass\n     public static void startServer() throws Exception {\n-        EmbeddedServerFactory.setupCleanDirectories(System.getProperties());\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(System.getProperties());\n         final ServerEnvironment serverEnvironment = Main.determineEnvironment(new String[0], new Properties(System.getProperties()), System.getenv());\n         assertNotNull(serverEnvironment);\n         final Bootstrap bootstrap = Bootstrap.Factory.newInstance();","filename":"testsuite/smoke/src/test/java/org/jboss/as/test/surefire/servermodule/HttpDeploymentUploadUnitTestCase.java"},{"diff":"@@ -21,47 +21,14 @@\n  */\n package org.jboss.as.test.surefire.servermodule;\n \n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.ADD;\n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OUTCOME;\n-import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUCCESS;\n-\n-import java.io.BufferedInputStream;\n-import java.io.BufferedOutputStream;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.lang.management.ManagementFactory;\n-import java.net.InetAddress;\n-import java.util.Collections;\n-import java.util.Properties;\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.Future;\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.TimeoutException;\n-\n-import javax.management.InstanceNotFoundException;\n-import javax.management.MBeanServer;\n-import javax.management.MBeanServerDelegate;\n-import javax.management.MBeanServerNotification;\n-import javax.management.Notification;\n-import javax.management.NotificationListener;\n-import javax.management.ObjectName;\n-\n import junit.framework.Assert;\n-\n import org.jboss.as.controller.client.ModelControllerClient;\n import org.jboss.as.controller.client.OperationBuilder;\n import org.jboss.as.controller.client.helpers.standalone.ServerDeploymentManager;\n import org.jboss.as.controller.descriptions.ModelDescriptionConstants;\n import org.jboss.as.protocol.StreamUtils;\n import org.jboss.as.server.Bootstrap;\n-import org.jboss.as.server.EmbeddedServerFactory;\n+import org.jboss.as.server.EmbeddedStandAloneServerFactory;\n import org.jboss.as.server.Main;\n import org.jboss.as.server.ServerEnvironment;\n import org.jboss.as.test.modular.utils.ShrinkWrapUtils;\n@@ -76,6 +43,37 @@\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n+import javax.management.InstanceNotFoundException;\n+import javax.management.MBeanServer;\n+import javax.management.MBeanServerDelegate;\n+import javax.management.MBeanServerNotification;\n+import javax.management.Notification;\n+import javax.management.NotificationListener;\n+import javax.management.ObjectName;\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.lang.management.ManagementFactory;\n+import java.net.InetAddress;\n+import java.util.Collections;\n+import java.util.Properties;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.ADD;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OP_ADDR;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.OUTCOME;\n+import static org.jboss.as.controller.descriptions.ModelDescriptionConstants.SUCCESS;\n+\n /**\n  * Here to prove the forked surefire plugin is capable of running\n  * modular tests. This plugin will load up this test class in a module that can see\n@@ -90,7 +88,7 @@\n     @BeforeClass\n     public static void startServer() throws Exception {\n \n-        EmbeddedServerFactory.setupCleanDirectories(System.getProperties());\n+        EmbeddedStandAloneServerFactory.setupCleanDirectories(System.getProperties());\n \n         ServerEnvironment serverEnvironment = Main.determineEnvironment(new String[0], new Properties(System.getProperties()), System.getenv());\n         Assert.assertNotNull(serverEnvironment);","filename":"testsuite/smoke/src/test/java/org/jboss/as/test/surefire/servermodule/ServerInModuleStartupTestCase.java"}],"committer":{"login":"bstansberry","name":"bstansberry@jboss.com","email":"brian.stansberry@redhat.com"},"committed_date":"2011-04-07T11:41:12-07:00","added":["build/src/main/resources/modules/org/jboss/as/embedded/main/module.xml","embedded/pom.xml","embedded/src/main/java/org/jboss/as/embedded/EmbeddedServerFactory.java","embedded/src/main/java/org/jboss/as/embedded/InitialModuleLoaderFactory.java","embedded/src/main/java/org/jboss/as/embedded/SecurityActions.java","embedded/src/main/java/org/jboss/as/embedded/ServerEnvironment.java","embedded/src/main/java/org/jboss/as/embedded/ServerStartException.java","embedded/src/main/java/org/jboss/as/embedded/StandaloneServer.java","server/src/main/java/org/jboss/as/server/EmbeddedStandAloneServerFactory.java"],"authored_date":"2011-04-06T02:06:16-07:00"}}
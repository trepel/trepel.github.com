{"commit":{"id":"0b33a16b2b28a3c30b4d7e811f7ec3a38896dcbf","message":"ARQ-632 Close the MBeanServerConnection's created by the JMX Protocol","committer":{"name":"Aslak Knutsen","email":"aslak@redhat.com","login":"aslakknutsen"},"committed_date":"2012-04-10T05:35:02-07:00","url":"/arquillian/arquillian-core/commit/0b33a16b2b28a3c30b4d7e811f7ec3a38896dcbf","authored_date":"2011-12-06T13:31:51-08:00","parents":[{"id":"27835614cd9cb2b8662d7cda850639dbbfbde6e3"}],"author":{"name":"Tommy Tynja","email":"tommy.tynja@diabol.se","login":"tommysdk"},"modified":[{"filename":"container/spi/src/main/java/org/jboss/arquillian/container/spi/client/protocol/metadata/JMXContext.java","diff":"@@ -18,8 +18,15 @@\n package org.jboss.arquillian.container.spi.client.protocol.metadata;\n \n import java.io.IOException;\n+import java.lang.ref.Reference;\n+import java.lang.ref.WeakReference;\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.logging.Logger;\n \n import javax.management.MBeanServerConnection;\n+import javax.management.remote.JMXConnector;\n import javax.management.remote.JMXConnectorFactory;\n import javax.management.remote.JMXServiceURL;\n \n@@ -31,6 +38,11 @@\n  */\n public class JMXContext extends NamedContext\n {\n+   private static final Logger log = Logger.getLogger(JMXContext.class.getName());\n+\n+   private static Set<Reference<MBeanServerConnection>> jmxConnectorRefs =\n+         Collections.synchronizedSet(new HashSet<Reference<MBeanServerConnection>>());\n+\n    /*\n     * The Host and Port of a Remote MBean Server\n     */\n@@ -70,15 +82,16 @@ public JMXContext(String name, MBeanServerConnection connection)\n     */\n    public MBeanServerConnection getConnection()\n    {\n-      if(connection == null) \n+      if(connection == null)\n       {\n          try\n          {\n-            connection = JMXConnectorFactory.connect(getRemoteJMXURL(), null).getMBeanServerConnection();\n-         }\n-         catch (IOException e) \n-         {\n-            throw new RuntimeException(\"Could not create remote JMX connection: \"  + this, e);\n+            JMXConnector connector = JMXConnectorFactory.connect(getRemoteJMXURL(), null);\n+            connection = connector.getMBeanServerConnection();\n+            WeakReference<MBeanServerConnection> ref = new JMXConnectorReference(connection, connector);\n+            jmxConnectorRefs.add(ref);\n+         } catch (IOException e) {\n+            throw new RuntimeException(\"Could not create remote JMX connection: \" + this, e);\n          }\n       }\n       return connection;\n@@ -101,4 +114,30 @@ public String toString()\n    {\n       return \"JMXContext [host=\" + host + \", port=\" + port + \", connection=\" + connection + \"]\";\n    }\n+\n+   private static class JMXConnectorReference extends WeakReference<MBeanServerConnection>\n+   {\n+      private JMXConnector connector;\n+\n+      public JMXConnectorReference(final MBeanServerConnection connection, JMXConnector connector)\n+      {\n+         super(connection);\n+         this.connector = connector;\n+      }\n+\n+      @Override\n+      public boolean enqueue()\n+      {\n+         try\n+         {\n+            connector.close();\n+         } catch (Exception ignored) {\n+            log.warning(\"Could not close JMXConnector: \" + connector);\n+         } finally {\n+            connector = null;\n+            jmxConnectorRefs.remove(this);\n+         }\n+         return super.enqueue();\n+      }\n+   }\n }"}],"tree":"6234efad9655153840c57604f0b3f6d6e3858e80"}}
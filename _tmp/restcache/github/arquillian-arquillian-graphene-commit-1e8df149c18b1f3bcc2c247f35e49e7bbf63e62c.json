{"commit":{"tree":"e47f4497164182d6f9f943afc8109d8926c1c9cf","parents":[{"id":"283ef1310cd6a3d16d6f49c4c2a47cf21acdda4d"}],"authored_date":"2011-06-03T06:52:19-07:00","id":"1e8df149c18b1f3bcc2c247f35e49e7bbf63e62c","url":"/arquillian/arquillian-graphene/commit/1e8df149c18b1f3bcc2c247f35e49e7bbf63e62c","committer":{"email":"jhuska@redhat.com","name":"Juraj Huska","login":"jhuska"},"committed_date":"2011-06-09T06:47:23-07:00","message":"methods keyPressNative, keyDownNative, keyUpNative took as parameter KeyEvent instance, since in this class there are keyevents as integers I changed this parameter to int, and now for example it is possible to call selenium.keyPressNative(KeyEvent.VK_CONTROL)","author":{"email":"jhuska@laptop.(none)","name":"juraj huska","login":""},"modified":[{"filename":"api/src/main/java/org/jboss/arquillian/ajocado/framework/TypedSelenium.java","diff":"@@ -21,7 +21,6 @@\n  */\n package org.jboss.arquillian.ajocado.framework;\n \n-import java.awt.event.KeyEvent;\n import java.awt.image.BufferedImage;\n import java.net.URL;\n import java.util.List;\n@@ -1597,7 +1596,7 @@ void dragAndDropToObject(ElementLocator<?> locatorOfObjectToBeDragged,\n      * @param keycode\n      *            java.awt.event.KeyEvent\n      */\n-    void keyDownNative(KeyEvent keycode);\n+    void keyDownNative(int keycode);\n \n     /**\n      * Simulates a user releasing a key by sending a native operating system keystroke. This function uses the\n@@ -1609,7 +1608,7 @@ void dragAndDropToObject(ElementLocator<?> locatorOfObjectToBeDragged,\n      * @param keycode\n      *            java.awt.event.KeyEvent\n      */\n-    void keyUpNative(KeyEvent keycode);\n+    void keyUpNative(int keycode);\n \n     /**\n      * Simulates a user pressing and releasing a key by sending a native operating system keystroke. This function uses\n@@ -1621,7 +1620,7 @@ void dragAndDropToObject(ElementLocator<?> locatorOfObjectToBeDragged,\n      * @param keycode\n      *            java.awt.event.KeyEvent\n      */\n-    void keyPressNative(KeyEvent keycode);\n+    void keyPressNative(int keycode);\n \n     /**\n      * Capture a PNG screenshot. It then returns the file as a base 64 encoded string."},{"filename":"impl/src/main/java/org/jboss/arquillian/ajocado/framework/TypedSeleniumImpl.java","diff":"@@ -21,7 +21,6 @@\n  */\n package org.jboss.arquillian.ajocado.framework;\n \n-import java.awt.event.KeyEvent;\n import java.awt.image.BufferedImage;\n import java.io.ByteArrayInputStream;\n import java.io.File;\n@@ -465,7 +464,7 @@ public void keyDown(ElementLocator<?> elementLocator, KeyCode keyCode) {\n         selenium.keyPress(elementLocator.inSeleniumRepresentation(), keyCode.inSeleniumRepresentation());\n     }\n \n-    public void keyDownNative(KeyEvent keycode) {\n+    public void keyDownNative(int keycode) {\n         selenium.keyDownNative(keyEventToNativeCode(keycode));\n     }\n \n@@ -477,7 +476,7 @@ public void keyPress(ElementLocator<?> elementLocator, KeyCode keyCode) {\n         selenium.keyPress(elementLocator.inSeleniumRepresentation(), keyCode.inSeleniumRepresentation());\n     }\n \n-    public void keyPressNative(KeyEvent keycode) {\n+    public void keyPressNative(int keycode) {\n         selenium.keyPressNative(keyEventToNativeCode(keycode));\n     }\n     \n@@ -489,7 +488,7 @@ public void keyUp(ElementLocator<?> elementLocator, KeyCode keyCode) {\n         selenium.keyPress(elementLocator.inSeleniumRepresentation(), keyCode.inSeleniumRepresentation());\n     }\n \n-    public void keyUpNative(KeyEvent keycode) {\n+    public void keyUpNative(int keycode) {\n         selenium.keyUpNative(keyEventToNativeCode(keycode));\n     }\n \n@@ -754,7 +753,7 @@ public void addCustomRequestHeader(RequestHeader header) {\n         selenium.addCustomRequestHeader(header.getName(), header.getValue());\n     }\n     \n-    private static String keyEventToNativeCode(KeyEvent event) {\n-        return Integer.toString(event.getKeyCode());\n+    private static String keyEventToNativeCode(int event) {\n+        return Integer.toString(event);\n     }\n }"}]}}
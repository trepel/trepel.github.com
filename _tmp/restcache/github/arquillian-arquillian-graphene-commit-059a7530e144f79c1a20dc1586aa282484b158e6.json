{"commit":{"id":"059a7530e144f79c1a20dc1586aa282484b158e6","tree":"1ebf713a484ce433e07c410b9a2176972b65c26d","author":{"email":"ppitonak@redhat.com","login":"ppitonak","name":"Pavol Pitonak"},"authored_date":"2010-09-16T09:34:06-07:00","committer":{"email":"ppitonak@redhat.com","login":"ppitonak","name":"Pavol Pitonak"},"modified":[{"diff":"@@ -21,13 +21,13 @@\n  */\n Selenium.prototype.getStyle = function(locator, property) {\n \tvar element = this.browserbot.findElementOrNull(locator);\n-\t\n+\n \tif (element == null) {\n-\t\t\tthrow new SeleniumError(\"null property value\");\n+\t\tthrow new SeleniumError(\"null property value\");\n \t}\n-\t\n+\n \tvar currentDocument = this.browserbot.getCurrentWindow().document;\n-\t\n+\n \treturn jQuery(element, currentDocument).css(property);\n }\n \n@@ -36,23 +36,26 @@ Selenium.prototype.getStyle = function(locator, property) {\n  * \n  * TODO should be reimplemented to use of JQuery.scrollTo\n  * \n- * @param locator of element which should be screen aligned to\n- * @param alignToTop should be top border of screen aligned to top border of element\n+ * @param locator\n+ *            of element which should be screen aligned to\n+ * @param alignToTop\n+ *            should be top border of screen aligned to top border of element\n  */\n Selenium.prototype.doScrollIntoView = function(locator, alignToTop) {\n \tvar elem = this.browserbot.findElementOrNull(locator);\n-\t\n+\n \tif (elem == null) {\n \t\tthrow new SeleniumError(\"null property value\");\n \t}\n-\t\n+\n \tif (elem.scrollIntoView == undefined) {\n-\t\tthrow new SeleniumError(\"scrollIntoView isn't supported at this element\");\n+\t\tthrow new SeleniumError(\n+\t\t\t\t\"scrollIntoView isn't supported at this element\");\n \t}\n-\t\n+\n \telem.scrollIntoView(alignToTop);\n }\n- \n+\n /**\n  * Simulates a user hovering a mouse over the specified element at specific\n  * coordinates relative to element.\n@@ -101,7 +104,25 @@ Selenium.prototype.isAttributePresent = function(elementLocator, attributeName)\n \t\tthrow new SeleniumError(\"element is not found\");\n \t}\n \tvar attribute = element.getAttribute(attributeName);\n-\treturn (!! attribute);\n+\treturn (!!attribute);\n+};\n+\n+/**\n+ * Verifies that the specified attribute is visible on the page.\n+ * \n+ * @param elementLocator\n+ *            an element locator\n+ * @return true if the element's attribute is present and visible, false otherwise\n+ */\n+Selenium.prototype.isDisplayed = function(elementLocator) {\n+\tvar element = this.browserbot.findElementOrNull(elementLocator);\n+\tif (element == null) {\n+\t\treturn false;\n+\t}\n+\n+\tvar currentDocument = this.browserbot.getCurrentWindow().document;\n+\n+\treturn jQuery(element, currentDocument).css('display') != 'none';\n };\n \n Selenium.prototype.throwError = function(message) {","filename":"library/src/main/javascript/selenium-extensions/extended-selenium.js"}],"message":"* added new condition for waitings","url":"/arquillian/arquillian-graphene/commit/059a7530e144f79c1a20dc1586aa282484b158e6","added":["library/src/main/java/org/jboss/test/selenium/waiting/conditions/IsDisplayed.java"],"parents":[{"id":"26ccd3ec77a07c448b95fb2cf352f24d31b50c0a"}],"committed_date":"2010-09-16T09:34:06-07:00"}}
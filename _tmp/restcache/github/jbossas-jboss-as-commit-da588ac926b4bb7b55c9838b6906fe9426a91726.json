{"commit":{"id":"da588ac926b4bb7b55c9838b6906fe9426a91726","message":"Fix undeploy not working if deployment fails","committer":{"name":"Jason T. Greene","email":"jason.greene@redhat.com","login":"n1hility"},"committed_date":"2011-03-13T22:10:40-07:00","url":"/jbossas/jboss-as/commit/da588ac926b4bb7b55c9838b6906fe9426a91726","authored_date":"2011-03-13T17:26:25-07:00","parents":[{"id":"6e44753b7af386a293673b42e4278fe2b63d6380"}],"author":{"name":"Stuart Douglas","email":"stuart.w.douglas@gmail.com","login":"stuartwdouglas"},"modified":[{"filename":"arquillian/common/src/main/java/org/jboss/as/arquillian/container/AbstractDeployableContainer.java","diff":"@@ -16,19 +16,6 @@\n  */\n package org.jboss.as.arquillian.container;\n \n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Future;\n-import java.util.logging.Logger;\n-\n-import javax.management.MBeanServerConnection;\n-import javax.management.MalformedObjectNameException;\n-import javax.management.ObjectName;\n-\n import org.jboss.arquillian.spi.Configuration;\n import org.jboss.arquillian.spi.ContainerMethodExecutor;\n import org.jboss.arquillian.spi.Context;\n@@ -50,6 +37,18 @@\n import org.jboss.shrinkwrap.api.Archive;\n import org.jboss.shrinkwrap.api.exporter.ZipExporter;\n \n+import javax.management.MBeanServerConnection;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.Future;\n+import java.util.logging.Logger;\n+\n /**\n  * A JBossAS server connector\n  *\n@@ -95,8 +94,7 @@ public ContainerMethodExecutor deploy(Context context, Archive<?> archive) throw\n             builder = builder.add(archive.getName(), input).andDeploy();\n             DeploymentPlan plan = builder.build();\n             DeploymentAction deployAction = builder.getLastAction();\n-            String runtimeName = executeDeploymentPlan(plan, deployAction);\n-            registry.put(archive, runtimeName);\n+            executeDeploymentPlan(plan, deployAction,archive);\n \n             return getContainerMethodExecutor(context);\n         } catch (Exception e) {\n@@ -175,8 +173,9 @@ protected ContainerMethodExecutor getContainerMethodExecutor(Context context) {\n     protected abstract ContainerMethodExecutor getContainerMethodExecutor();\n \n \n-    private String executeDeploymentPlan(DeploymentPlan plan, DeploymentAction deployAction) throws Exception {\n+    private String executeDeploymentPlan(DeploymentPlan plan, DeploymentAction deployAction, Archive<?> archive) throws Exception {\n         Future<ServerDeploymentPlanResult> future = deploymentManager.execute(plan);\n+        registry.put(archive, deployAction.getDeploymentUnitUniqueName());\n         ServerDeploymentPlanResult planResult = future.get();\n \n         ServerDeploymentActionResult actionResult = planResult.getDeploymentActionResult(deployAction.getId());"}],"tree":"4fb1c37271b414f3d5af728d3591b0cc7477b85d"}}